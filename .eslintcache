[{"C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\index.tsx":"1","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\reportWebVitals.ts":"2","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\App.tsx":"3","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\routes\\Routes.tsx":"4","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\components\\navigation\\desktopnavigation\\DesktopNavigation.tsx":"5","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\routes\\RoutingPath.ts":"6","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\shared\\provider\\UserProvider.tsx":"7","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\components\\profile\\Profile.tsx":"8","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\components\\profile\\profiledropdown\\ProfileDropDown.tsx":"9","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\components\\navigation\\Navigation.tsx":"10","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\hooks\\useWindowDimensions.tsx":"11","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\components\\navigation\\mobilenavigation\\MobileNavigation.tsx":"12","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\components\\navigation\\mobilenavigation\\sidebar\\SideBar.tsx":"13","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\components\\navigation\\mobilenavigation\\hamburgerbutton\\HamburgerButton.tsx":"14","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\components\\backdrop\\BackDrop.tsx":"15","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\view\\categories\\CategoriesView.tsx":"16","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\view\\home\\HomeView.tsx":"17","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\view\\about\\AboutView.tsx":"18","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\view\\login\\LogInView.tsx":"19","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\view\\signup\\SignUpView.tsx":"20","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\components\\productcards\\ProductCards.tsx":"21","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\components\\search\\Search.tsx":"22"},{"size":478,"mtime":1612284415701,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":1612284415861,"results":"25","hashOfConfig":"24"},{"size":354,"mtime":1612424370396,"results":"26","hashOfConfig":"24"},{"size":1431,"mtime":1612469573561,"results":"27","hashOfConfig":"24"},{"size":984,"mtime":1613049837901,"results":"28","hashOfConfig":"24"},{"size":300,"mtime":1612284416273,"results":"29","hashOfConfig":"24"},{"size":389,"mtime":1612284416393,"results":"30","hashOfConfig":"24"},{"size":586,"mtime":1613050006807,"results":"31","hashOfConfig":"24"},{"size":696,"mtime":1612469569044,"results":"32","hashOfConfig":"24"},{"size":772,"mtime":1613049647775,"results":"33","hashOfConfig":"24"},{"size":551,"mtime":1612426354607,"results":"34","hashOfConfig":"24"},{"size":937,"mtime":1613040269352,"results":"35","hashOfConfig":"24"},{"size":745,"mtime":1613049991980,"results":"36","hashOfConfig":"24"},{"size":403,"mtime":1612972019365,"results":"37","hashOfConfig":"24"},{"size":200,"mtime":1612455474167,"results":"38","hashOfConfig":"24"},{"size":104,"mtime":1612369781224,"results":"39","hashOfConfig":"24"},{"size":860,"mtime":1613049544934,"results":"40","hashOfConfig":"24"},{"size":150,"mtime":1612466483921,"results":"41","hashOfConfig":"24"},{"size":1581,"mtime":1612470021409,"results":"42","hashOfConfig":"24"},{"size":319,"mtime":1612450663778,"results":"43","hashOfConfig":"24"},{"size":189,"mtime":1613048108909,"results":"44","hashOfConfig":"24"},{"size":163,"mtime":1613049132936,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"jt45td",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\index.tsx",[],["100","101"],"C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\reportWebVitals.ts",[],"C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\App.tsx",[],"C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\routes\\Routes.tsx",["102","103"],"import { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { AboutView } from \"../view/about/AboutView\";\nimport { HomeView } from \"../view/home/HomeView\";\nimport { CategoriesView } from \"../view/categories/CategoriesView\";\nimport { LogInWiev } from \"../view/login/LogInView\";\nimport { SignUpView } from \"../view/signup/SignUpView\";\nimport RoutingPath from \"./RoutingPath\";\nimport { UserContext } from \"../shared/provider/UserProvider\";\nimport { useEffect, useContext } from \"react\";\n\nexport const Routes = (props: { children: React.ReactChild }) => {\n  const [authUser, setAuthUser] = useContext(UserContext);\n  const { children } = props;\n\n  useEffect(() => {\n    if (localStorage.getItem(\"user\")) {\n      setAuthUser({ username: localStorage.getItem(\"user\") });\n    }\n  }, []);\n\n  return (\n    <BrowserRouter>\n      {children}\n      <Switch>\n        <Route exact path={RoutingPath.homeView} component={HomeView} />\n        <Route exact path={RoutingPath.aboutView} component={AboutView} />\n        <Route exact path={RoutingPath.categoriesView} component={CategoriesView} />\n        <Route exact path={RoutingPath.logInView} component={LogInWiev} />\n        <Route exact path={RoutingPath.signUpView} component={SignUpView} />\n        <Route component={HomeView} />{\" \"}\n        {/* Om vi vill att homeView är den första sidan vi kommer till och om något blir fel */}\n      </Switch>\n    </BrowserRouter>\n  );\n};\n","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\components\\navigation\\desktopnavigation\\DesktopNavigation.tsx",["104","105"],"import \"./DesktopNavigation.css\";\nimport { useHistory, Link } from \"react-router-dom\";\n import { useContext } from \"react\";\nimport RoutingPath from \"../../../routes/RoutingPath\";\nimport { UserContext } from \"../../../shared/provider/UserProvider\";\nimport { Profile } from \"../../profile/Profile\";\n\n\nexport const DesktopNavigation = () => {\n  const history =useHistory()\n  const [authUser, setAuthUser] = useContext(UserContext);\n\n  const displayNavigationOrUsername = () => {\n    return authUser ? \n      <div className=\"profile\" >\n        <Profile />\n      </div>\n     : \n     <div className=\"desktopNavigationTabWrapper\"> \n      <Link to={RoutingPath.signUpView}>\n        Gå med\n      </Link>\n        <span> eller </span>     \n      <Link to={RoutingPath.logInView}>\n        logga in\n      </Link>\n        <span> eller </span>\n      <Link to={RoutingPath.aboutView}>\n        få veta hur det fungerar.\n      </Link>\n    </div>\n    ;\n  };\n\n  return displayNavigationOrUsername()\n};\n","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\routes\\RoutingPath.ts",[],"C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\shared\\provider\\UserProvider.tsx",["106"],"import { useState, createContext, ReactChild } from \"react\";\n\nexport const UserContext = createContext<any>(null);\n\nexport const UserProvider = (props: { children: React.ReactChild }) => {\n  const [authUser, setAuthUser] = useState();\n  const { children } = props;\n\n  return (\n    <UserContext.Provider value={[authUser, setAuthUser]}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\components\\profile\\Profile.tsx",[],"C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\components\\profile\\profiledropdown\\ProfileDropDown.tsx",["107"],"import \"./ProfileDropDown.css\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../../../shared/provider/UserProvider\";\nimport { useHistory } from 'react-router-dom'\nimport RoutingPath from '../../../routes/RoutingPath'\n\nexport const ProfileDropDown = () => {\n  const history = useHistory()\n  const [authUser, setAuthUser] = useContext(UserContext);\n\n  const logOut = () => {\n    setAuthUser(false);\n    localStorage.removeItem('user')\n    history.push(RoutingPath.homeView)\n\n  };\n\n  return (\n    <div className=\"profileDropDown\">\n      <button>Min profil</button>\n      <button>Inställningar</button>\n      <button onClick={() => logOut()}>Logga ut</button>\n    </div>\n  );\n};\n",["108","109"],"C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\components\\navigation\\Navigation.tsx",[],"C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\hooks\\useWindowDimensions.tsx",[],"C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\components\\navigation\\mobilenavigation\\MobileNavigation.tsx",["110"],"import \"./MobileNavigation.css\";\nimport { useState, useContext } from 'react'\nimport { HamburgerButton } from './hamburgerbutton/HamburgerButton'\nimport { SideBar } from './sidebar/SideBar'\nimport { BackDrop } from '../../backdrop/BackDrop'\nimport { Profile } from '../../profile/Profile'\nimport { UserContext } from '../../../shared/provider/UserProvider'\n\n\nexport const MobileNavigation = () => {\n  const [openSideBar, setOpenSideBar] = useState<boolean>(false)\n  const [authUser, setAuthUser] = useContext(UserContext);\n\n  const displayNavigationOrUsername = () => {\n    return authUser ? \n      <div className=\"profile\" >\n        <Profile />\n      </div>\n     : \n     <>\n    <HamburgerButton sideBarHandler={setOpenSideBar}/>\n    <SideBar sideBarIsOpen={openSideBar} sideBarHandler={setOpenSideBar}/>\n    {!openSideBar || <BackDrop sideBarHandler={setOpenSideBar}/>}\n    </>\n    }\n\n    return displayNavigationOrUsername()\n    };\n\n\n\n","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\components\\navigation\\mobilenavigation\\sidebar\\SideBar.tsx",["111"],"import './SideBar.css'\nimport { useHistory, Link } from 'react-router-dom'\nimport RoutingPath from '../../../../routes/RoutingPath'\n\nexport const SideBar = (props: {sideBarIsOpen: boolean, sideBarHandler: Function}) => {\n\n  const history = useHistory()\n  \n  const handleRedirectFromSideBar = (selectedView: string) => {\n    history.push(selectedView)\n    props.sideBarHandler(false)\n  }\n\n  return (\n    <div className={props.sideBarIsOpen ? 'sideBarWrapper open' : 'sideBarWrapper'}>\n        <Link to={RoutingPath.signUpView}>Gå med</Link>\n        <span>eller</span>\n        <Link to={RoutingPath.logInView}>logga in</Link>\n        <span>eller</span>\n        <Link to={RoutingPath.aboutView}> få veta hur det fungerar.</Link>\n    </div>\n  )\n}\n","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\components\\navigation\\mobilenavigation\\hamburgerbutton\\HamburgerButton.tsx",[],"C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\components\\backdrop\\BackDrop.tsx",[],"C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\view\\categories\\CategoriesView.tsx",[],"C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\view\\home\\HomeView.tsx",["112","113"],"import { useEffect, useState } from \"react\";\nimport { Link } from 'react-router-dom'\nimport LogoType from '../../../shared/images/LogoType.png'\nimport './HomeView.css'\nimport { ProductCards } from '../../components/productcards/ProductCards'\nimport { Search } from '../../components/search/Search'\nimport RoutingPath from '../../routes/RoutingPath'\n\nexport const HomeView = () => {\n  /*  const [authUser, setAuthUser] = useState() */\n\n  useEffect(() => {\n ; /* det första som sker när komponenten laddas in */\n    return () => {\n      /* det sista som sker när komponeneten avlägsnas*/\n    };\n  }, []); /* när det värdet vi sätter in i input uppdateras så körs hela useEffect om */\n\n  return (\n    <div className='homeViewWrapper'>\n      <Link to={RoutingPath.categoriesView}>Kategorier</Link>\n      <Search/>\n      <ProductCards/>\n    </div>\n  );\n};\n","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\view\\about\\AboutView.tsx",[],"C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\view\\login\\LogInView.tsx",["114"],"import { useState, useContext } from \"react\";\nimport { i_loginCredentials } from \"../../shared/interface/Interface\";\nimport { useHistory } from \"react-router-dom\";\nimport RoutingPath from \"../../routes/RoutingPath\";\nimport { UserContext } from \"../../shared/provider/UserProvider\";\n\nexport const LogInWiev = () => {\n  const history = useHistory();\n  const [loginCredentials, setLoginCredentials] = useState<i_loginCredentials>({\n    username: \"\",\n    password: \"\",\n  });\n  const [authUser, setAuthUser] = useContext(UserContext);\n\n  const signIn = () => {\n    localStorage.setItem(\n      \"user\",\n      loginCredentials.username\n    ); /* användarnamnet sparas inne i webläsaren */\n    setAuthUser(\n      loginCredentials\n    ); /* alla värden i logincredentials sparas i ett globalt värde */\n    history.push(RoutingPath.homeView); /* vi flyttas tillbaka till home-view */\n  };\n\n  return (\n    <div>\n      {/* <h1>{loginCredentials.username}</h1> */}\n      <h1>Logga in här om du vill.</h1>\n      <form>\n        <input\n          placeholder=\"username\"\n          onChange={(event) =>\n            setLoginCredentials({\n              ...loginCredentials,\n              username: event.target.value,\n            })\n          }\n        />{\" \"}\n        <br />\n        <input\n          placeholder=\"password\"\n          onChange={(event) =>\n            setLoginCredentials({\n              ...loginCredentials,\n              password: event.target.value,\n            })\n          }\n        />\n        <button onClick={() => signIn()}>Logga in</button>\n      </form>\n    </div>\n  );\n};\n","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\view\\signup\\SignUpView.tsx",[],"C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\components\\productcards\\ProductCards.tsx",[],"C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\components\\search\\Search.tsx",[],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":12,"column":10,"nodeType":"121","messageId":"122","endLine":12,"endColumn":18},{"ruleId":"123","severity":1,"message":"124","line":19,"column":6,"nodeType":"125","endLine":19,"endColumn":8,"suggestions":"126"},{"ruleId":"119","severity":1,"message":"127","line":10,"column":9,"nodeType":"121","messageId":"122","endLine":10,"endColumn":16},{"ruleId":"119","severity":1,"message":"128","line":11,"column":20,"nodeType":"121","messageId":"122","endLine":11,"endColumn":31},{"ruleId":"119","severity":1,"message":"129","line":1,"column":35,"nodeType":"121","messageId":"122","endLine":1,"endColumn":45},{"ruleId":"119","severity":1,"message":"120","line":9,"column":10,"nodeType":"121","messageId":"122","endLine":9,"endColumn":18},{"ruleId":"115","replacedBy":"130"},{"ruleId":"117","replacedBy":"131"},{"ruleId":"119","severity":1,"message":"128","line":12,"column":20,"nodeType":"121","messageId":"122","endLine":12,"endColumn":31},{"ruleId":"119","severity":1,"message":"132","line":9,"column":9,"nodeType":"121","messageId":"122","endLine":9,"endColumn":34},{"ruleId":"119","severity":1,"message":"133","line":1,"column":21,"nodeType":"121","messageId":"122","endLine":1,"endColumn":29},{"ruleId":"119","severity":1,"message":"134","line":3,"column":8,"nodeType":"121","messageId":"122","endLine":3,"endColumn":16},{"ruleId":"119","severity":1,"message":"120","line":13,"column":10,"nodeType":"121","messageId":"122","endLine":13,"endColumn":18},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"@typescript-eslint/no-unused-vars","'authUser' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setAuthUser'. Either include it or remove the dependency array.","ArrayExpression",["137"],"'history' is assigned a value but never used.","'setAuthUser' is assigned a value but never used.","'ReactChild' is defined but never used.",["135"],["136"],"'handleRedirectFromSideBar' is assigned a value but never used.","'useState' is defined but never used.","'LogoType' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},"Update the dependencies array to be: [setAuthUser]",{"range":"140","text":"141"},[788,790],"[setAuthUser]"]