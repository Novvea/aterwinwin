[{"C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\index.tsx":"1","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\reportWebVitals.ts":"2","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\App.tsx":"3","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\routes\\Routes.tsx":"4","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\view\\AboutView.tsx":"5","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\view\\HomeView.tsx":"6","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\components\\navigation\\desktopnavigation\\DesktopNavigation.tsx":"7","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\view\\CategoriesView.tsx":"8","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\view\\LogInWiev.tsx":"9","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\view\\SignUpView.tsx":"10","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\routes\\RoutingPath.ts":"11","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\shared\\provider\\UserProvider.tsx":"12","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\components\\profile\\Profile.tsx":"13","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\components\\profile\\profiledropdown\\ProfileDropDown.tsx":"14"},{"size":477,"mtime":1611663596217,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":388,"mtime":1611841683456,"results":"18","hashOfConfig":"16"},{"size":1360,"mtime":1612187407162,"results":"19","hashOfConfig":"16"},{"size":108,"mtime":1611665034354,"results":"20","hashOfConfig":"16"},{"size":491,"mtime":1612186531593,"results":"21","hashOfConfig":"16"},{"size":1208,"mtime":1612187842168,"results":"22","hashOfConfig":"16"},{"size":102,"mtime":1611828884109,"results":"23","hashOfConfig":"16"},{"size":1307,"mtime":1611912681312,"results":"24","hashOfConfig":"16"},{"size":108,"mtime":1611829281280,"results":"25","hashOfConfig":"16"},{"size":292,"mtime":1611830120234,"results":"26","hashOfConfig":"16"},{"size":383,"mtime":1611841679515,"results":"27","hashOfConfig":"16"},{"size":496,"mtime":1612270845730,"results":"28","hashOfConfig":"16"},{"size":496,"mtime":1612274090023,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"kbti98",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\index.tsx",[],["64","65"],"C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\reportWebVitals.ts",[],"C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\App.tsx",[],"C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\routes\\Routes.tsx",["66","67"],"import {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport { AboutView } from '../view/AboutView'\nimport { HomeView } from '../view/HomeView'\nimport { CategoriesView } from '../view/CategoriesView'\nimport { LogInWiev } from '../view/LogInWiev'\nimport { SignUpView } from '../view/SignUpView'\nimport RoutingPath from './RoutingPath'\nimport { UserContext } from '../shared/provider/UserProvider'\nimport { useEffect, useContext } from 'react'\n\nexport const Routes = (props: {children: React.ReactChild}) => {\n  const [authUser, setAuthUser] = useContext(UserContext)\n  const { children } = props\n\n  useEffect(() => {\n    if (localStorage.getItem('user')) {\n      setAuthUser({ username: localStorage.getItem('user') })   \n    }\n  }, [])\n\n  return (\n    <BrowserRouter>\n      {children}\n      <Switch>\n        <Route exact path={RoutingPath.homeView} component={HomeView}/>\n        <Route exact path={RoutingPath.aboutView} component={AboutView}/>\n        <Route exact path={RoutingPath.categoriesView} component={CategoriesView}/>\n        <Route exact path={RoutingPath.logInView} component={LogInWiev}/>\n        <Route exact path={RoutingPath.signUpView} component={SignUpView}/>\n        <Route component={HomeView}/> {/* Om vi vill att homeView är den första sidan vi kommer till och om något blir fel */}\n      </Switch>\n    </BrowserRouter>\n  )\n}","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\view\\AboutView.tsx",[],"C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\view\\HomeView.tsx",["68"],"import { useEffect, useState } from 'react'\n\nexport const HomeView = () => {\n /*  const [authUser, setAuthUser] = useState() */\n\n  useEffect(() => {\n    alert('HomeView first render')/* det första som sker när komponenten laddas in */\n    return () => {\n       /* det sista som sker när komponeneten avlägsnas*/\n    }\n  }, []) /* när det värdet vi sätter in i input uppdateras så körs hela useEffect om */\n\n  return (\n    <div>\n      <h1>This is the HomeView!</h1>\n    </div>\n  )\n}\n","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\components\\navigation\\desktopnavigation\\DesktopNavigation.tsx",["69"],"import './DesktopNavigation.css'\nimport LogoType from '../../../shared/images/LogoType.png'\nimport { useHistory } from 'react-router-dom'\nimport { useContext } from 'react'\nimport RoutingPath from '../../../routes/RoutingPath'\nimport { UserContext } from '../../../shared/provider/UserProvider'\nimport { Profile } from '../../profile/Profile'\n\nexport const DesktopNavigation = () => {\n  const history = useHistory()\n  const [authUser, setAuthUser] = useContext(UserContext)\n\n  const displaySignInOrUsername = () => {\n    return authUser \n      ? <div className=\"profile\"><Profile/></div>\n      : <span className='logInButton' onClick={() => history.push(RoutingPath.logInView)}>Logga in</span>\n  }\n\n\n  return (\n    <div className=\"desktopNavigationWrapper\">\n      <span onClick={() => history.push(RoutingPath.homeView)}><img className=\"navigationLogotype\" src={LogoType} alt={\"Logotype\"}/></span>\n      <span onClick={() => history.push(RoutingPath.categoriesView)}>Kategorier</span>\n      <span onClick={() => history.push(RoutingPath.aboutView)}>Hur det fungerar</span>\n      <span onClick={() => history.push(RoutingPath.signUpView)}>Skapa konto</span>\n      {displaySignInOrUsername()}\n    </div>\n  )\n}\n","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\view\\CategoriesView.tsx",[],"C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\view\\LogInWiev.tsx",["70"],"import { useState, useContext } from 'react'\nimport { i_loginCredentials } from '../shared/interface/Interface'\nimport { useHistory } from 'react-router-dom'\nimport RoutingPath from '../routes/RoutingPath'\nimport { UserContext } from '../shared/provider/UserProvider'\n\nexport const LogInWiev = () => {\n  const history = useHistory()\n  const [loginCredentials, setLoginCredentials] = useState<i_loginCredentials>({username: '', password: ''})\n  const [authUser, setAuthUser] = useContext(UserContext)\n\n\n  const signIn = () => {\n    localStorage.setItem('user', loginCredentials.username) /* användarnamnet sparas inne i webläsaren */\n    setAuthUser(loginCredentials) /* alla värden i logincredentials sparas i ett globalt värde */\n    history.push(RoutingPath.homeView) /* vi flyttas tillbaka till home-view */\n  }\n\n  return (\n    <div>\n      <h1>{loginCredentials.username}</h1>\n      <form>\n        <input \n          placeholder='username' \n          onChange={event => setLoginCredentials({ ...loginCredentials, username: event.target.value})}/> <br />\n        <input \n          placeholder='password' \n          onChange={event => setLoginCredentials({ ...loginCredentials, password: event.target.value})} />\n        <button onClick={() => signIn()}>Logga in</button>\n      </form>\n    </div>\n  )\n}\n","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\view\\SignUpView.tsx",[],"C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\routes\\RoutingPath.ts",[],"C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\shared\\provider\\UserProvider.tsx",["71"],"import { useState, createContext, ReactChild } from 'react'\n\nexport const UserContext = createContext<any>(null)\n\nexport const UserProvider = (props: { children: React.ReactChild }) => {\n  const [authUser, setAuthUser] = useState()\n  const { children } = props\n\n  return (\n    <UserContext.Provider value={[authUser, setAuthUser]}>\n      {children}\n\n    </UserContext.Provider>\n  )\n}","C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\components\\profile\\Profile.tsx",[],"C:\\Users\\ano\\Documents\\GitHub\\aterwinwin\\src\\components\\profile\\profiledropdown\\ProfileDropDown.tsx",["72"],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":12,"column":10,"nodeType":"79","messageId":"80","endLine":12,"endColumn":18},{"ruleId":"81","severity":1,"message":"82","line":19,"column":6,"nodeType":"83","endLine":19,"endColumn":8,"suggestions":"84"},{"ruleId":"77","severity":1,"message":"85","line":1,"column":21,"nodeType":"79","messageId":"80","endLine":1,"endColumn":29},{"ruleId":"77","severity":1,"message":"86","line":11,"column":20,"nodeType":"79","messageId":"80","endLine":11,"endColumn":31},{"ruleId":"77","severity":1,"message":"78","line":10,"column":10,"nodeType":"79","messageId":"80","endLine":10,"endColumn":18},{"ruleId":"77","severity":1,"message":"87","line":1,"column":35,"nodeType":"79","messageId":"80","endLine":1,"endColumn":45},{"ruleId":"77","severity":1,"message":"78","line":6,"column":11,"nodeType":"79","messageId":"80","endLine":6,"endColumn":19},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"@typescript-eslint/no-unused-vars","'authUser' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setAuthUser'. Either include it or remove the dependency array.","ArrayExpression",["90"],"'useState' is defined but never used.","'setAuthUser' is assigned a value but never used.","'ReactChild' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},"Update the dependencies array to be: [setAuthUser]",{"range":"93","text":"94"},[740,742],"[setAuthUser]"]